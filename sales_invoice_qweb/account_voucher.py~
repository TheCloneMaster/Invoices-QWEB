# -*- coding: utf-8 -*-
##############################################################################
#
#    OpenERP, Open Source Management Solution
#    Copyright (C) 2004-2010 Tiny SPRL (<http://tiny.be>).
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################

import time
from lxml import etree

from openerp import models, fields, api, _
#from openerp.osv import fields, osv
import openerp.addons.decimal_precision as dp
from openerp.tools.translate import _
from openerp.tools import float_compare
from openerp.report import report_sxw


class account_voucher(models.Model):
    _inherit = 'account.voucher'

    #@api.multi
    #def voucher_print(self): 
    def voucher_print(self, cr, uid, ids, context=None):
        '''
        This function prints the voucher
        '''
        #assert len(self) == 1, 'This option should only be used for a single id at a time.'
        #return self.env['report'].get_action(self, 'account_voucher_print_xml.report_voucher_print')

        #old api version...
        assert len(ids) == 1, 'This option should only be used for a single id at a time.'
        if context is None:
            context = {}
        #self.write(cr, uid, ids, {'sent': True}, context=context)
        datas = {
             'ids': ids,
             'model': 'account.voucher',
             'form': self.read(cr, uid, ids[0], context=context)
        }
        return {
            'type': 'ir.actions.report.xml',
            'report_name': 'account_voucher_print_xml.report_voucher_qweb',
            'datas': datas,
            'nodestroy' : True
        }

# vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4:
